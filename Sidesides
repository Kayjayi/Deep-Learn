from PIL import Image, ImageDraw, ImageFont
from reportlab.lib.pagesizes import landscape, letter
from reportlab.platypus import SimpleDocTemplate, Image as ImageFlowable, Spacer, Table
from reportlab.lib.styles import getSampleStyleSheet
from reportlab.lib import colors
import os

def compress_image(image_path, quality=80):
    img = Image.open(image_path)
    img.save(image_path, quality=quality)

def calculate_resize_dimensions(image_sizes, page_size):
    page_width, page_height = page_size
    total_images = len(image_sizes)
    total_width = sum([size[0] for size in image_sizes])
    total_height = max([size[1] for size in image_sizes])
    aspect_ratio = total_width / total_height
    
    new_width = min(total_width, page_width)
    new_height = new_width / aspect_ratio

    return int(new_width / total_images), int(new_height)

def add_caption_to_image(image_path, caption, output_path):
    # Open the original image
    img = Image.open(image_path)
    draw = ImageDraw.Draw(img)

    # Set font and size for the caption
    font = ImageFont.truetype("arial.ttf", 20)

    # Calculate text size and position
    text_width, text_height = draw.textsize(caption, font=font)
    text_x = (img.width - text_width) // 2
    text_y = img.height - text_height - 10  # Adjusted position to leave space at the bottom

    # Draw the caption on the image
    draw.text((text_x, text_y), caption, fill=(255, 255, 255), font=font)

    # Save the composite image with the caption
    img.save(output_path)

def create_pdf(folder1, folder2, folder3, output_pdf):
    doc = SimpleDocTemplate(output_pdf, pagesize=landscape(letter))
    styles = getSampleStyleSheet()
    flowables = []

    images = []
    captions = []
    texts = ["Text 1", "Text 2", "Text 3"]  # Sample text for the three columns
    for file1, file2, file3 in zip(os.listdir(folder1), os.listdir(folder2), os.listdir(folder3)):
        image1 = os.path.join(folder1, file1)
        image2 = os.path.join(folder2, file2)
        image3 = os.path.join(folder3, file3)

        img1_size = Image.open(image1).size
        img2_size = Image.open(image2).size
        img3_size = Image.open(image3).size
        images.extend([img1_size, img2_size, img3_size])

        # Compress images
        compress_image(image1)
        compress_image(image2)
        compress_image(image3)

        captions.extend([os.path.basename(image1), os.path.basename(image2), os.path.basename(image3)])

    img_width, img_height = calculate_resize_dimensions(images, landscape(letter))
    img_width *= 1.5  # Increase image width
    img_height *= 1.5  # Increase image height

    image_rows = []
    for file1, file2, file3, caption, text in zip(os.listdir(folder1), os.listdir(folder2), os.listdir(folder3), captions, texts):
        image1 = ImageFlowable(os.path.join(folder1, file1), width=img_width, height=img_height)
        image2 = ImageFlowable(os.path.join(folder2, file2), width=img_width, height=img_height)
        image3 = ImageFlowable(os.path.join(folder3, file3), width=img_width, height=img_height)
        
        # Add caption to each image and save as new images
        caption_image1 = os.path.join(folder1, f"caption_{file1}")
        caption_image2 = os.path.join(folder2, f"caption_{file2}")
        caption_image3 = os.path.join(folder3, f"caption_{file3}")

        add_caption_to_image(image1, caption, caption_image1)
        add_caption_to_image(image2, caption, caption_image2)
        add_caption_to_image(image3, caption, caption_image3)

        # Create ImageFlowable for the captioned images
        image1_with_caption = ImageFlowable(caption_image1, width=img_width, height=img_height + 50)  # Increased height for caption
        image2_with_caption = ImageFlowable(caption_image2, width=img_width, height=img_height + 50)
        image3_with_caption = ImageFlowable(caption_image3, width=img_width, height=img_height + 50)
        
        image_rows.append([image1_with_caption, image2_with_caption, image3_with_caption, text])  # Add text to each row

    # Create captions row
    caption_row = [Paragraph(caption, styles["Normal"]) for caption in captions]
    max_caption_height = max([caption.wrap(img_width, img_height)[1] for caption in caption_row])
    caption_row = [caption._restrictSize(img_width, max_caption_height) for caption in caption_row]

    table = Table([image_rows, caption_row], colWidths=[img_width, img_width, img_width, None], rowHeights=[img_height + 50, max_caption_height])
    flowables.append(table)

    doc.build(flowables)
